# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  workflow_dispatch: {}

jobs:
 test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: | 
        mvn -B package --file pom.xml
        mkdir staging && cp target/*.jar staging
        cd staging
        ls -la
    - name: Build the Docker image
      run: |
        ls -ltr
        docker build . --file Dockerfile --tag ${{secrets.DOCKERHUB_USERNAME}}/demo_123:latest  
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push to DockerHub
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/demo_123:latest
    - name: ðŸ”Ž Check IP
      run: curl https://api.ipify.org  
      
    - name: Deploy to my EC2 instance
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
        SOURCE: "./"
        REMOTE_HOST: "ec2-52-66-251-53.ap-south-1.compute.amazonaws.com"
        REMOTE_USER: "ec2-user" 
    
